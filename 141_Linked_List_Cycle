# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, x):
#         self.val = x
#         self.next = None


from typing import Optional


class Solution:
    def hasCycle(self, head: Optional[ListNode]) -> bool:
        if head == None:
            return False
        slow_pointer, fast_pointer = head, head.next
        while fast_pointer != None and fast_pointer.next != None:
            if slow_pointer == fast_pointer:
                return True
            slow_pointer = slow_pointer.next
            fast_pointer = fast_pointer.next.next
        return False
